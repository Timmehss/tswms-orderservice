name: OrderService - Build, Test, and Deploy

on:
  pull_request:
    branches:
      - main

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"

      - name: Restore NuGet packages
        run: dotnet restore
        working-directory: Back-end/TSWMS.OrderService/TSWMS.OrderService.Api

      - name: Build the project
        run: dotnet build --configuration Release --no-restore
        working-directory: Back-end/TSWMS.OrderService/TSWMS.OrderService.Api

  Test:
    runs-on: ubuntu-latest
    needs: Build  # Fix: Correct reference to the "Build" job

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"

      - name: Restore dependencies
        run: dotnet restore
        working-directory: Back-end/TSWMS.OrderService

      - name: Run tests with coverage
        run: |
          dotnet test --configuration Release --collect:"XPlat Code Coverage" --logger trx --results-directory coverage
        working-directory: Back-end/TSWMS.OrderService

      - name: Convert coverage to SonarCloud format
        run: |
          dotnet tool install --global dotnet-reportgenerator-globaltool
          reportgenerator -reports:coverage/**/*.xml -targetdir:coverage/reports -reporttypes:Cobertura

      - name: Upload test coverage artifact
        uses: actions/upload-artifact@v4  # Fix: Updated to latest version
        with:
          name: code-coverage-report
          path: Back-end/TSWMS.OrderService/coverage/reports

  SonarCloud:
    name: SonarCloud Analysis
    runs-on: windows-latest
    needs: [Test]  # Fix: Correct casing to match job name

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "zulu"

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Add SonarCloud scanner to PATH
        shell: powershell
        run: |
          $Env:PATH += ";$(pwd)\.sonar\scanner"

      - name: Download test coverage report
        uses: actions/download-artifact@v4  # Fix: Updated to latest version
        with:
          name: code-coverage-report
          path: Back-end/TSWMS.OrderService/coverage/reports

      - name: Build and analyze with SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .sonar\scanner\dotnet-sonarscanner begin /k:"Timmehss_TSWMS" /o:"tswms" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="Back-end/TSWMS.OrderService/coverage/reports/Cobertura.xml"
          dotnet build Back-end/TSWMS.OrderService/TSWMS.OrderService.sln
          .sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  Docker:
    runs-on: ubuntu-latest
    needs: [SonarCloud]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: Back-end/TSWMS.OrderService
          file: Back-end/TSWMS.OrderService/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/tswms-orderservice:dev-latest
