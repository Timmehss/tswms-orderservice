name: OrderService - Build, Test, and Deploy

on:
  push:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"

      - name: Restore NuGet packages
        run: dotnet restore
        working-directory: TSWMS.OrderService

      - name: Build the entire solution
        run: dotnet build --configuration Release --no-restore
        working-directory: TSWMS.OrderService


  sonarcloud:
    name: sonarcloud analysis & coverage
    needs: build
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Install SonarScanner
        run: dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Begin SonarCloud analysis
        run: .\.sonar\scanner\dotnet-sonarscanner begin `
          /k:"Timmehss_TSWMS" `
          /o:"tswms" `
          /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
          /d:sonar.host.url="https://sonarcloud.io" `
          /d:sonar.cs.opencover.reportsPaths="TestResults/**/coverage.opencover.xml" `
          /d:sonar.exclusions="**/build-wrapper-dump.json" `
          /d:sonar.coverage.exclusions="TSWMS.OrderService.Configurations/*.cs,TSWMS.OrderService.Data/Migrations/*.cs,TSWMS.OrderService.Data/*.cs,TSWMS.OrderService.Api/Program.cs"
          /d:sonar.test.inclusions="**/TSWMS.OrderService.Business.UnitTests/**/*.cs" `
          /d:sonar.cs.testProjectPattern=".*\.UnitTests"
        shell: pwsh
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --no-incremental

      - name: Run Unit Tests with Coverage
        run: dotnet test TSWMS.OrderService.Business.UnitTests/TSWMS.OrderService.Business.UnitTests.csproj `
          --collect:"XPlat Code Coverage" `
          --results-directory:"TestResults" `
          --settings coverlet.runsettings

      - name: Show coverage XML (optional)
        run: Get-Content -Path (Get-ChildItem -Path TestResults -Recurse -Filter 'coverage.opencover.xml').FullName
        shell: pwsh

      - name: End SonarCloud analysis
        run: .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
        shell: pwsh

  docker:
    runs-on: ubuntu-latest
    needs: [test, sonarcloud]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: TSWMS.OrderService
          file: TSWMS.OrderService/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/tswms-orderservice:dev-latest